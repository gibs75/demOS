; ----------------------------------------------------------------------------
; SYNTH PROTO INIT SCRIPT
;
; For an azerty keyboard (PC) :
;
; - 12 keys A to $ (line 1) => play note
; - 9  keys S to M (line 2) => change bit decimate mask
; - 7  keys W to , (line 3) => select another sustain sample of current sound
; - Cursor left / right	    => change volume (bit shift)
; - Space                   => toggle left/right channel
; - Numpad +/-              => transpose
;
; In this prototype soundsets are fixed:
; soundset 1 on left & soundset 2 on right
;
; PCM files should be raw pcm 8bit signed 
; (look at import/export in Audacity for example)
;
; For the current sound, the list of samples that will be played 
; when pressing a key are all samples defined as no sustain (-) and first 
; specified sustain sample (s)
; Other sustain samples can be defined optionally then you will be allow to 
; change current sustain sample of the fly ([W] => [;])
;
; Example for provided soundset 1:
; 
; Full list of samples 					0[-]  1[s]  2[s]  3[s]  4[-]
; List of played sample by default		0     1  				4
; Sustain sample 1 change on fly by           1     2     3 
; Keyboard notes 	            			  > Pressed ........> Release
; Keyboard sustain sample                     > Select ....... <
; Keyboard octave change                > Select ....................... <
; Keyboard volume change  				> Select ....................... <
; Keyboard decimate mask change			> Select ....................... <
; ----------------------------------------------------------------------------

; ----------------------------------------------------------------------------
; nb sounds sets 
2

; for each sounds set
; {
;		basefreq
		220
; 		semitone of sample (0 -> 11) => other semitones will be computed from this one
		0
; 		transpose range
		2
;		sustain index : index of sample index used for sustain (0 to nbsamplesindex - 1)

; 		----------------------------------------------------
; 		nbsamples
		5

; 		for each samples
;		{
;			filename (raw sample 8 bits pcm signed)
			PCM\SND1_0.RAW
;			nbperiods
			10
; 			sampletype (s for sustain, else -)
			-

			PCM\SND1_1.RAW
			1
			s
			
			PCM\SND1_2.RAW
			1
			s
			
			PCM\SND1_3.RAW
			1
			s
			
			PCM\SND1_4.RAW
			5
			-
;		}
;	}

			
; for each sounds set
; {
;		basefreq
		220
; 		semitone of sample (0 -> 11) => other semitones will be computed from this one
		0
; 		transpose range
		3
;		sustain index : index of sample index used for sustain (0 to nbsamplesindex - 1)

; 		----------------------------------------------------
; 		nbsamples
		3

; 		for each samples
;		{
;			filename (raw sample 8 bits pcm signed)
			PCM\SND2_0.RAW
;			nbperiods
			40
; 			sampletype (s for sustain, else -)
			-
			
			PCM\SND2_1.RAW
			1
			s

			PCM\SND2_2.RAW
			40
			-
;		}
;	}
